spring:
  datasource:
    username: prod_kitedge_aib
    password: Lo7y#D$bdh&CBx&4&Gw3fFPy@R
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://rm-uf65q8izu7rkvo424o.mysql.rds.aliyuncs.com:3306/prod_kitedge_aib?useUnicode=true&characterEncoding=utf8&useSSL=false
    type: com.alibaba.druid.pool.DruidDataSource
#   redis:
#     host: 180.169.205.170
#     port: 7008
#     password: Ko&26MLNt#i0$giTy3kUjv7*Ek
  redis:
    # sentinel:
    #   master: master
    #   nodes: 172.19.155.147:6001
    cluster:
      nodes:
       - 172.19.155.147:6001
       - 172.19.155.147:6002
       - 172.19.155.146:6001
       - 172.19.155.146:6002
       - 172.19.155.148:6001
       - 172.19.155.148:6002
    password: Kite#Dge20190722



server:
  port: 8888


mybatis:
  mapper-locations:
  - classpath:mapper/*Mapper.xml
  configuration:
    mapUnderscoreToCamelCase: true
    useColumnLabel : true
    useGeneratedKeys: true

mybatis-plus:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.kitedge.user.entity.domain
  configuration:
    map-underscore-to-camel-case: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      
# spring security的资源控制和spring securtiy oauth2的资源控制会互相覆盖，没法做到分离控制。
# 如果配置添加了security.oauth2.resource.filter-order=3，则使用spring security的控制，反之则为oauth2的控制。
# 这里由于本身是oauth服务，因此自身只能spring security的控制
security:
  oauth2:
    resource:
      filter-order: 3
